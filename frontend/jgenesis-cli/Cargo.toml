[package]
name = "jgenesis-cli"
version = "0.9.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
gb-core = { path = "../../backend/gb-core", features = ["clap"] }
genesis-core = { path = "../../backend/genesis-core", features = ["clap"] }
nes-core = { path = "../../backend/nes-core", features = ["clap"] }
s32x-core = { path = "../../backend/s32x-core", features = ["clap"] }
segacd-core = { path = "../../backend/segacd-core", features = ["clap"] }
smsgg-core = { path = "../../backend/smsgg-core", features = ["clap"] }
snes-core = { path = "../../backend/snes-core", features = ["clap"] }

jgenesis-common = { path = "../../common/jgenesis-common", features = ["clap"] }
jgenesis-native-config = { path = "../jgenesis-native-config", features = ["clap"] }
jgenesis-native-driver = { path = "../jgenesis-native-driver", features = ["clap"] }
jgenesis-proc-macros = { path = "../../common/jgenesis-proc-macros" }
jgenesis-renderer = { path = "../jgenesis-renderer", features = ["clap"] }

anyhow = { workspace = true }
clap = { workspace = true }
env_logger = { workspace = true }
log = { workspace = true, features = ["release_max_level_info"] }
sdl2 = { workspace = true }
toml = { workspace = true }

[package.metadata.packager]
icons = ["../32x32.png"]
# Nightly toolchain used because of -Ztune-cpu codegen arg
before-packaging-command = """
RUSTFLAGS='-C target-cpu=x86-64-v2 -Z tune-cpu=x86-64-v3' \
JGENESIS_APPIMAGE_BUILD=1 \
cargo +nightly build --profile release-lto"""

[package.metadata.packager.appimage]
# Including any Wayland-related libraries in the AppImage package can cause the app to fail to start on some distros,
# such as Solus Plasma; having mismatched Wayland library versions seems to cause wgpu to fail to load graphics libraries
excludedLibs = ["libwayland*"]

[lints]
workspace = true
